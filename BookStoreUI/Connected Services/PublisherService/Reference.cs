//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookStoreUI.PublisherService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Publisher", Namespace="http://schemas.datacontract.org/2004/07/BookStoreData")]
    [System.SerializableAttribute()]
    public partial class Publisher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BookStoreUI.PublisherService.Book[] BooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublisherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BookStoreUI.PublisherService.Book[] Books {
            get {
                return this.BooksField;
            }
            set {
                if ((object.ReferenceEquals(this.BooksField, value) != true)) {
                    this.BooksField = value;
                    this.RaisePropertyChanged("Books");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublisherId {
            get {
                return this.PublisherIdField;
            }
            set {
                if ((this.PublisherIdField.Equals(value) != true)) {
                    this.PublisherIdField = value;
                    this.RaisePropertyChanged("PublisherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublisherName {
            get {
                return this.PublisherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherNameField, value) != true)) {
                    this.PublisherNameField = value;
                    this.RaisePropertyChanged("PublisherName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/BookStoreData")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BookStoreUI.PublisherService.Author AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidIsbnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsbnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NextStockDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BookStoreUI.PublisherService.Publisher PublisherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublisherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WarehouseLocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BookStoreUI.PublisherService.Author Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidIsbn {
            get {
                return this.IsValidIsbnField;
            }
            set {
                if ((this.IsValidIsbnField.Equals(value) != true)) {
                    this.IsValidIsbnField = value;
                    this.RaisePropertyChanged("IsValidIsbn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Isbn {
            get {
                return this.IsbnField;
            }
            set {
                if ((object.ReferenceEquals(this.IsbnField, value) != true)) {
                    this.IsbnField = value;
                    this.RaisePropertyChanged("Isbn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NextStockDate {
            get {
                return this.NextStockDateField;
            }
            set {
                if ((this.NextStockDateField.Equals(value) != true)) {
                    this.NextStockDateField = value;
                    this.RaisePropertyChanged("NextStockDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Preface {
            get {
                return this.PrefaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefaceField, value) != true)) {
                    this.PrefaceField = value;
                    this.RaisePropertyChanged("Preface");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BookStoreUI.PublisherService.Publisher Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublisherId {
            get {
                return this.PublisherIdField;
            }
            set {
                if ((this.PublisherIdField.Equals(value) != true)) {
                    this.PublisherIdField = value;
                    this.RaisePropertyChanged("PublisherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityLeft {
            get {
                return this.QuantityLeftField;
            }
            set {
                if ((this.QuantityLeftField.Equals(value) != true)) {
                    this.QuantityLeftField = value;
                    this.RaisePropertyChanged("QuantityLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WarehouseLocation {
            get {
                return this.WarehouseLocationField;
            }
            set {
                if ((this.WarehouseLocationField.Equals(value) != true)) {
                    this.WarehouseLocationField = value;
                    this.RaisePropertyChanged("WarehouseLocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Author", Namespace="http://schemas.datacontract.org/2004/07/BookStoreData")]
    [System.SerializableAttribute()]
    public partial class Author : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BookStoreUI.PublisherService.Book[] BooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BookStoreUI.PublisherService.Book[] Books {
            get {
                return this.BooksField;
            }
            set {
                if ((object.ReferenceEquals(this.BooksField, value) != true)) {
                    this.BooksField = value;
                    this.RaisePropertyChanged("Books");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookDTO", Namespace="http://schemas.datacontract.org/2004/07/BookStoreService.DTOs")]
    [System.SerializableAttribute()]
    public partial class BookDTO : BookStoreUI.PublisherService.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidIsbnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsbnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NextStockDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WarehouseLocationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidIsbn {
            get {
                return this.IsValidIsbnField;
            }
            set {
                if ((this.IsValidIsbnField.Equals(value) != true)) {
                    this.IsValidIsbnField = value;
                    this.RaisePropertyChanged("IsValidIsbn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Isbn {
            get {
                return this.IsbnField;
            }
            set {
                if ((object.ReferenceEquals(this.IsbnField, value) != true)) {
                    this.IsbnField = value;
                    this.RaisePropertyChanged("Isbn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NextStockDate {
            get {
                return this.NextStockDateField;
            }
            set {
                if ((this.NextStockDateField.Equals(value) != true)) {
                    this.NextStockDateField = value;
                    this.RaisePropertyChanged("NextStockDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Preface {
            get {
                return this.PrefaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefaceField, value) != true)) {
                    this.PrefaceField = value;
                    this.RaisePropertyChanged("Preface");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublisherName {
            get {
                return this.PublisherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherNameField, value) != true)) {
                    this.PublisherNameField = value;
                    this.RaisePropertyChanged("PublisherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityLeft {
            get {
                return this.QuantityLeftField;
            }
            set {
                if ((this.QuantityLeftField.Equals(value) != true)) {
                    this.QuantityLeftField = value;
                    this.RaisePropertyChanged("QuantityLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WarehouseLocation {
            get {
                return this.WarehouseLocationField;
            }
            set {
                if ((this.WarehouseLocationField.Equals(value) != true)) {
                    this.WarehouseLocationField = value;
                    this.RaisePropertyChanged("WarehouseLocation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDTO", Namespace="http://schemas.datacontract.org/2004/07/BookStoreService.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BookStoreUI.PublisherService.PublisherDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BookStoreUI.PublisherService.BookDTO))]
    public partial class BaseDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublisherDTO", Namespace="http://schemas.datacontract.org/2004/07/BookStoreService.DTOs")]
    [System.SerializableAttribute()]
    public partial class PublisherDTO : BookStoreUI.PublisherService.BaseDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublisherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublisherId {
            get {
                return this.PublisherIdField;
            }
            set {
                if ((this.PublisherIdField.Equals(value) != true)) {
                    this.PublisherIdField = value;
                    this.RaisePropertyChanged("PublisherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublisherName {
            get {
                return this.PublisherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherNameField, value) != true)) {
                    this.PublisherNameField = value;
                    this.RaisePropertyChanged("PublisherName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublisherService.IPublisherService")]
    public interface IPublisherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublisherService/GetPublisherBooks", ReplyAction="http://tempuri.org/IPublisherService/GetPublisherBooksResponse")]
        BookStoreUI.PublisherService.BookDTO[] GetPublisherBooks(BookStoreUI.PublisherService.Publisher publisher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublisherService/GetPublisherBooks", ReplyAction="http://tempuri.org/IPublisherService/GetPublisherBooksResponse")]
        System.Threading.Tasks.Task<BookStoreUI.PublisherService.BookDTO[]> GetPublisherBooksAsync(BookStoreUI.PublisherService.Publisher publisher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublisherService/GetPublishers", ReplyAction="http://tempuri.org/IPublisherService/GetPublishersResponse")]
        BookStoreUI.PublisherService.PublisherDTO[] GetPublishers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublisherService/GetPublishers", ReplyAction="http://tempuri.org/IPublisherService/GetPublishersResponse")]
        System.Threading.Tasks.Task<BookStoreUI.PublisherService.PublisherDTO[]> GetPublishersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPublisherServiceChannel : BookStoreUI.PublisherService.IPublisherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PublisherServiceClient : System.ServiceModel.ClientBase<BookStoreUI.PublisherService.IPublisherService>, BookStoreUI.PublisherService.IPublisherService {
        
        public PublisherServiceClient() {
        }
        
        public PublisherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PublisherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublisherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublisherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BookStoreUI.PublisherService.BookDTO[] GetPublisherBooks(BookStoreUI.PublisherService.Publisher publisher) {
            return base.Channel.GetPublisherBooks(publisher);
        }
        
        public System.Threading.Tasks.Task<BookStoreUI.PublisherService.BookDTO[]> GetPublisherBooksAsync(BookStoreUI.PublisherService.Publisher publisher) {
            return base.Channel.GetPublisherBooksAsync(publisher);
        }
        
        public BookStoreUI.PublisherService.PublisherDTO[] GetPublishers() {
            return base.Channel.GetPublishers();
        }
        
        public System.Threading.Tasks.Task<BookStoreUI.PublisherService.PublisherDTO[]> GetPublishersAsync() {
            return base.Channel.GetPublishersAsync();
        }
    }
}
